{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * Triton plugin for Craft CMS 3.x
 *
 * Triton index.twig
 *
 * @author    GeeHim Siu
 * @copyright Copyright (c) 2018 GeeHim Siu
 * @link      www.fishawack.com
 * @package   Triton
 * @since     1.0.0
 */
#}

{% extends "_layouts/cp" %}
{% import "_includes/forms" as forms %}

{# Link for the ? icon at the bottom of the page #}
{% set docsUrl = "???" %}

{# The title of this CP section #}
{% set title = "Triton" %}

{# The URL to this plugin's base CP section #}
{% set pluginCpUrl = url('triton') %}

{# Content that should appear in the page header#}
{% set extraPageHeaderHtml %}
    <div class="buttons">
        <a href="{{ pluginCpUrl }}" class="btn submit add icon">{{ "Click Me!"|t('triton') }}</a>
    </div>
{% endset %}

{# The content of the CP Section#}
{% set content %}
    <h2>Upload the Datavision Publication CSV!</h2>
    <p class="textline">
    </p>

    <form action="/admin/triton/upload" enctype="multipart/form-data" method="POST">
        <div style="width:100%; margin: 1.5em 0;">
            <input type="file" name="tritonupload" />
        </div>
        <input type="hidden" name="_csrf" value="{{ craft.request.getCsrfToken }}" />
        <div style="width:25%; margin: 1.5em 0;">
            <input type="submit" name="submit" value="Import" style="padding:0.5em 0; width: 100%;" />
                    </div>
    </form>

    <hr style="margin-top: 3.5em;">
    <h1>Utilities</h1>
    <button id="exportcsv" style="padding:1em 0; width: 15%;" onclick="location.href='/triton/exportcsv'">Export CSV</button>
    <button id="updatejson" style="padding:1em 0; width: 15%;">Update Json Cache</button>

    <div id="notification" style="width:100%; min-height: 2.5em; color: #20DE89; margin:1em 0;">
    </div>

    <p style="margin-bottom:1em; width:50%; text-align:justify;">
        <strong style="color:red;">Caution</strong><br>
        I've had problems when you edit the CSV export using a Mac, more often that not
        it'll add extra , to the end of your rows therefore if you are to edit the file
        please make sure it's being saved / edited using something different (VIM edits
        the files without any probs).<br><br>
        Make sure that each section has at least 1 entry - even if the entry only has a title!
        Our plugin needs a single entry to base the sections & types from.
    </p>

    <script type="text/javascript">
    var updateButton = document.querySelector('#updatejson');   

    // AJAX Request URLs
    var requestUrls = [
        '/triton/updatejsonfiles?data=studies',
        '/triton/updatejsonfiles?data=journals',
        '/triton/updatejsonfiles?data=congresses',
        '/triton/updatejsonfiles?data=tags',
        '/triton/updatejsonfiles?data=doctypes',
        '/triton/updatejsonfiles?data=globals',
        '/triton/updatejsonfiles?data=categories',
        '/triton/updatejsonfiles?data=publications'
    ];

    var current = 0;
   
    updateButton.addEventListener('click', function() {
        ajax(requestUrls[current], function(){
        	notification("All done!");
        });    
    });

    function ajax(url, cb)
    {
        var xobj = new XMLHttpRequest();

        xobj.open('GET', requestUrls[current], true);
        notification('Loading next file ...');

        xobj.onreadystatechange = function () {
            if(xobj.readyState === 4 && xobj.status === 200)
            {
                var response = JSON.parse(xobj.responseText);
                notification("Loaded " + requestUrls[current]);
                ++current;

                if(current < requestUrls.length) {
                    setTimeout(function(){
						ajax(requestUrls[current], cb);
                    }, 1000);
                } else {
                	cb();
                }
            }
        };
        xobj.send(null); 
    }

    function notification(data, error = false)
    {   
        console.log(data);
        var notification = document.querySelector('#notification');
        notification.innerHTML = '<p>'+data+'</p>';
    }

    </script>
{% endset %}
